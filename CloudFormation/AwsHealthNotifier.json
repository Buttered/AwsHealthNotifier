{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Lambda to notify slack channel of aws scheduled events",
    "Parameters": {
        "s3Bucket": {
            "Type": "String",
            "Description": "S3 bucket housing the zip of lambda source"
        },
        "s3Key": {
            "Type": "String",
            "Description": "Name of zip file"
        },
        "KmsKeyArn": {
            "Type": "String",
            "Description": "Arn of kms key used to encrypt/decrypt environment variables"
        },
        "SlackChannel": {
            "Type": "String",
            "Description": "Name of slack channel"
        },
        "SlackChannelIcon": {
            "Type": "String",
            "Description": "Slack icon"
        },
        "SlackWebhookUrl": {
            "Type": "String",
            "Description": "Slack webhook url"
        }
    },
    "Resources": {
        "ScheduledRule": {
            "Type": "AWS::Events::Rule",
            "Properties": {
                "Description": "ScheduledRule",
                "ScheduleExpression": "cron(0 8 ? * * *)",
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": [
                                "lambdaFunction",
                                "Arn"
                            ]
                        },
                        "Id": "ScheduledRule"
                    }
                ]
            }
        },
        "lambdaFunctionPermissions": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "lambdaFunction",
                        "Arn"
                    ]
                }
            }
        },
        "lambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "s3Bucket"
                    },
                    "S3Key": {
                        "Ref": "s3Key"
                    }
                },
                "Handler": "AwsHealth.lambda_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "iamRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.6",
                "FunctionName": "AwsHealthSlackNotification",
                "MemorySize": 128,
                "Timeout": 5,
                "Environment": {
                    "Variables": {
                        "SlackChannel": {
                            "Ref": "SlackChannel"
                        },
                        "SlackChannelIcon": {
                            "Ref": "SlackChannelIcon"
                        },
                        "SlackWebhookUrl": {
                            "Ref": "SlackWebhookUrl"
                        }
                    }
                },
                "VpcConfig": {
                    "SecurityGroupIds": [],
                    "SubnetIds": []
                },
                "Description": ""
            }
        },
        "iamPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents",
                                "logs:DescribeLogStreams"
                            ],
                            "Resource": [
                                "arn:aws:logs:*:*:*"
                            ]
                        }
                    ]
                },
                "PolicyName": "AwsHealthIamPolicy",
                "Roles": [
                    {
                        "Ref": "iamRole"
                    }
                ]
            }
        },
        "iamRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AWSHealthFullAccess"
                ]
            }
        }
    },
    "Outputs": {}
}